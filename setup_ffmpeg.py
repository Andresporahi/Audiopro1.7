#!/usr/bin/env python3
"""
Script de configuraci√≥n autom√°tica de FFmpeg para Streamlit Cloud
Este script se ejecuta autom√°ticamente al iniciar la aplicaci√≥n
"""

import os
import subprocess
import sys


def setup_ffmpeg():
    """Configura FFmpeg en Streamlit Cloud."""
    print("üîß Configurando FFmpeg para Streamlit Cloud...")

    # Verificar si estamos en Streamlit Cloud
    is_streamlit_cloud = os.getenv(
        'STREAMLIT_SERVER_HEADLESS', 'false'
    ).lower() == 'true'

    if is_streamlit_cloud:
        print("üåê Detectado Streamlit Cloud")

        # En Streamlit Cloud, FFmpeg deber√≠a estar disponible via packages.txt
        try:
            # Verificar si ffmpeg est√° disponible
            result = subprocess.run(
                ['ffmpeg', '-version'],
                capture_output=True, text=True, timeout=10
            )
            if result.returncode == 0:
                print("‚úÖ FFmpeg ya est√° disponible")
                return True
        except (subprocess.TimeoutExpired, FileNotFoundError):
            pass

        # Intentar instalar FFmpeg usando apt-get (Ubuntu en Streamlit Cloud)
        try:
            print("üì• Instalando FFmpeg...")
            subprocess.run(
                ['sudo', 'apt-get', 'update'],
                capture_output=True, timeout=60
            )
            subprocess.run(
                ['sudo', 'apt-get', 'install', '-y', 'ffmpeg'],
                capture_output=True, timeout=120
            )

            # Verificar instalaci√≥n
            result = subprocess.run(
                ['ffmpeg', '-version'],
                capture_output=True, text=True, timeout=10
            )
            if result.returncode == 0:
                print("‚úÖ FFmpeg instalado exitosamente")
                return True
            else:
                print("‚ùå FFmpeg no se pudo instalar")
                return False

        except Exception as e:
            print(f"‚ùå Error instalando FFmpeg: {e}")
            return False
    else:
        print("üíª Ejecutando localmente - FFmpeg debe estar instalado manualmente")
        return True


def create_symlinks():
    """Crea enlaces simb√≥licos para ffprobe si es necesario."""
    try:
        # Verificar si ffprobe est√° disponible
        subprocess.run(
            ['ffprobe', '-version'],
            capture_output=True, text=True, timeout=10
        )
        print("‚úÖ ffprobe disponible")
    except (subprocess.TimeoutExpired, FileNotFoundError):
        try:
            # Crear enlace simb√≥lico de ffmpeg a ffprobe si es necesario
            if os.path.exists('/usr/bin/ffmpeg'):
                os.symlink('/usr/bin/ffmpeg', '/usr/bin/ffprobe')
                print("‚úÖ Enlace simb√≥lico ffprobe creado")
            else:
                print("‚ö†Ô∏è No se pudo crear enlace simb√≥lico para ffprobe")
        except Exception as e:
            print(f"‚ö†Ô∏è Error creando enlace simb√≥lico: {e}")


if __name__ == "__main__":
    print("üöÄ Iniciando configuraci√≥n de AudioPro 1.6...")

    # Configurar FFmpeg
    ffmpeg_ok = setup_ffmpeg()

    if ffmpeg_ok:
        # Crear enlaces simb√≥licos si es necesario
        create_symlinks()
        print("üéâ Configuraci√≥n completada exitosamente!")
    else:
        print("‚ùå Configuraci√≥n fall√≥ - FFmpeg no disponible")
        sys.exit(1)
